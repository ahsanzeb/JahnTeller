(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* :Context: JahnTeller` *)
(* :Author: Ahsan Zeb *)
(* :Summary: Calculations of Jahn-Teller effect in ABO3 perovskites *)
(* :Copyright: Copyright (c) 2023 Ahsan Zeb, distributed under the XXXX license *)
(* :Package Version: 1.0 *)
(* :Mathematica Version: 11.2.0.0 *)


If[TrueQ[$VersionNumber<10],Print["Sorry, JahnTeller only works with version 10+ of the Wolfram Language."];Abort[]];


BeginPackage["JahnTeller`", "Global`"]; 
(* Global` becuase some variables like dh, Rl2, etc
 that are not defined in the package but in the user files, 
 could be used by the package *)


(*auxiliary: *)
$JahnTellerVersion::usage="$JahnTellerVersion gives the version number of the JahnTeller package.";
$JahnTellerDebugQ::usage="Setting $JahnTellerDebugQ=True results in debugging messages being printed during evaluations.";


getXYZCages::usage="getXYZCages[a,\[Alpha],\[Beta]]";

getRlm::usage=" {Rot3,Rl2,Rl4} = getRlm[\[Theta],\[Phi]]";
getVmsIndividualQs::usage="{VtotaQ,VtotbQ}=getVmsIndividualQs[\[Alpha],\[Beta],r,\[Theta],\[Phi],{x,y,z,u,v,w,\[Sigma],\[Mu],\[Tau]}];"
getVmsIndividualQsSL::usage="{VtotaQ,VtotbQ}=getVmsIndividualQs[\[Alpha],\[Beta],r,\[Theta],\[Phi],{x,y,z,u,v,w,\[Sigma],\[Mu],\[Tau]}];"

(*getCoeff::usage="VlmA=getCoeff[VtotaQ];";*)

getHam::usage="{dh20A,dh40A}=getHam[VlmZeroA]//FullSimplify;"
egShiftSplitting::usage="et2gA=egShiftSplitting[VlmsRulesA];"
gettheta0t2g::usage="gettheta0t2g[VlmsRulesA]"

getHamFullABO::usage="dh=getHamFullABO[Rl2,VlmsRulesA,VlmsRulesB];"
getEigensystem::usage="{evals,evecs}=getEigensystem[alpha,beta,qs];
EmitSound[Sound[SoundNote[]]]"

Vlm::usage="Vlm A and B cages "



Begin["`Private`"];


(*$JahnTeller=1.;*)
debug:=TrueQ[$JahnTellerDebugQ];


(* get all .m files from PackageFiles directory *)
Get/@FileNames["*.m",FileNameJoin[{DirectoryName[$InputFileName],"PackageFiles"}]];


End[];
EndPackage[];
